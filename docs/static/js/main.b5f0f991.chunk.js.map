{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Oficina/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","wallet","EarnTron","Component","constructor","props","super","state","totalInvestors","totalInvested","sponsor","INVEST_MIN_AMOUNT","deposit","bind","refer","componentDidMount","Utils","window","setInterval","trx","getAccount","account","accountAddress","address","fromHex","getUserReferrer","call","setState","loc","document","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","isAddress","getBalance","balanceCuenta","console","log","getElementById","value","amount","parseFloat","parseInt","_hex","invest","send","shouldPollResponse","callValue","alert","totalUsers","render","INVEST_MIN_AMOUNT_2","id","className","style","type","placeholder","onClick","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Investors","Link","withdraw","mydireccion","isActive","getUserTotalWithdrawn","getUserDividends","getUserAvailable","getUserTotalDeposits","getUserReferralBonus","RETI_MIN","withdrawl","text","toFixed","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.b5f0f991.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = \"TNBKFs7dHm9tuxegtEDTTo1zfZuGZutgjP\";\r\n\r\nexport default contractAddress;\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nconst wallet = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      sponsor: \"Loading...\",\r\n      INVEST_MIN_AMOUNT: 0\r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n    this.refer = this.refer.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1*1000);\r\n    setInterval(() => this.refer(),1*1000);\r\n  };\r\n\r\n  async refer() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var refer = await Utils.contract.getUserReferrer(accountAddress).call();\r\n    refer = window.tronWeb.address.fromHex(refer);\r\n\r\n    if ( refer === 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb') {\r\n         this.setState({\r\n             sponsor: 'N/A'\r\n           });\r\n\r\n      var loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n          var getString = loc.split('?')[1];\r\n          var GET = getString.split('&');\r\n          var get = {};\r\n          for(var i = 0, l = GET.length; i < l; i++){\r\n              var tmp = GET[i].split('=');\r\n              get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n          }\r\n\r\n          if (window.tronWeb.isAddress(get['ref'])) {\r\n\r\n            this.setState({\r\n              sponsor: get['ref']\r\n            });\r\n\r\n\r\n          }else{\r\n              if ( refer === 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb') {\r\n                  this.setState({\r\n                      sponsor: 'N/A'\r\n                    });\r\n              }else{\r\n                  this.setState({\r\n                      sponsor: refer\r\n                    });\r\n              }\r\n\r\n          }\r\n\r\n      }\r\n\r\n    }else{\r\n        this.setState({\r\n            sponsor: refer\r\n          });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    var balanceCuenta = await window.tronWeb.trx.getBalance(); //number\r\n    balanceCuenta = balanceCuenta/1000000;\r\n    console.log(balanceCuenta);\r\n\r\n        var loc = document.location.href;\r\n        if(loc.indexOf('?')>0){\r\n            var getString = loc.split('?')[1];\r\n            var GET = getString.split('&');\r\n            var get = {};\r\n            for(var i = 0, l = GET.length; i < l; i++){\r\n                var tmp = GET[i].split('=');\r\n                get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n            }\r\n\r\n            if (get['ref'].length === 34) {\r\n\r\n              document.getElementById('sponsor').value = get['ref'];\r\n            }else{\r\n\r\n               document.getElementById('sponsor').value = wallet;\r\n            }\r\n\r\n\r\n        }else{\r\n\r\n            document.getElementById('sponsor').value = wallet;\r\n        }\r\n\r\n    var amount = document.getElementById(\"amount\").value;\r\n    var sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n    amount = parseFloat(amount);\r\n    console.log(amount);\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    var INVEST_MIN_AMOUNT = await Utils.contract.INVEST_MIN_AMOUNT().call();\r\n\r\n    INVEST_MIN_AMOUNT = parseInt(INVEST_MIN_AMOUNT._hex)/1000000;\r\n\r\n    console.log(INVEST_MIN_AMOUNT);\r\n\r\n\r\n    if ( amount >= INVEST_MIN_AMOUNT && balanceCuenta >= amount+40 ){\r\n\r\n        await Utils.contract.invest(sponsor).send({\r\n          shouldPollResponse: true,\r\n          callValue: amount * 1000000 // converted to SUN\r\n        });\r\n\r\n    }else{\r\n        window.alert(\"El minimo de inversión es \"+INVEST_MIN_AMOUNT+\" TRX, adicinal a esto recuerda dejar 40 TRX adicionales para cubrir el fee de la transacción\");\r\n        document.getElementById(\"amount\").value = INVEST_MIN_AMOUNT;\r\n      }\r\n\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    var totalUsers = await Utils.contract.totalUsers().call();\r\n    //console.log(totalUsers);\r\n\r\n    var totalInvested = await Utils.contract.totalInvested().call();\r\n    //console.log(totalInvested);\r\n\r\n    var INVEST_MIN_AMOUNT = await Utils.contract.INVEST_MIN_AMOUNT().call();\r\n\r\n    INVEST_MIN_AMOUNT = parseInt(INVEST_MIN_AMOUNT._hex)/1000000;\r\n\r\n\r\n    this.setState({\r\n      totalInvestors: parseInt(totalUsers._hex),\r\n      totalInvested: parseInt(totalInvested._hex)/1000000,\r\n      INVEST_MIN_AMOUNT: INVEST_MIN_AMOUNT\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { totalInvestors, totalInvested, sponsor, INVEST_MIN_AMOUNT } = this.state;\r\n\r\n    var INVEST_MIN_AMOUNT_2 = \"Min. \"+INVEST_MIN_AMOUNT+\" TRX\";\r\n\r\n    return (\r\n\r\n    <div id=\"pricing\" className=\"cards-2\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <h2>Multiple ways to Capitalize</h2>\r\n                    <p className=\"p-heading p-large\">We develop different capitalization rates, you can decide and choose according to the capital and interest you want.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h1>Return investiment of 1% everiday (+0.0416% for hourly)</h1>\r\n                    <div className=\"according\" style={{'textAlign': 'left','fontSize': '1.1rem','listStyle': 'disclosure-closed'}}>\r\n                        <li>YOUTRON7 smart-contract calculate profit up to every deposit since the date it was made. Every hour you will get +0.0416%, every day +1%.</li><br />\r\n                        <li>Smart-contract calculates hold-bonus from your deposit, or last withdraw date. If you did not request payment, it will charge you an additional bonus. After 24 hours +0.05% and so on.</li><br />\r\n\r\n                        <li>+0.07% for every 700,000 TRX on platform balance</li> <br />\r\n                    </div>\r\n                        Total invested amount (TRX):<br />\r\n                        <button  className=\"btn  btn-success\"  style={{'width': '100%'}}>{totalInvested} TRX</button><br /><br />\r\n                        Total active participants:<br />\r\n                        <button  className=\"btn  btn-success\"  style={{'width': '100%'}}>{totalInvestors}</button>\r\n\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"label\">\r\n\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">INVESTIMENT</div>\r\n                            <div className=\"card-subtitle\">earn everisdays</div>\r\n                            <hr className=\"cell-divide-hr\" />\r\n                            <div className=\"price\">\r\n                                <span className=\"value\">+1%</span>\r\n                                <div className=\"frequency\">Daily earning</div>\r\n                            </div>\r\n                            <hr className=\"cell-divide-hr\" />\r\n                            <ul className=\"list-unstyled li-space-lg\">\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">Dividends every day</div>\r\n                                </li>\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">Total return +1% * days </div>\r\n                                </li>\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">0.07% bonus 700,000  trx</div>\r\n                                </li>\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">TRX minimum investment amount {INVEST_MIN_AMOUNT} trx</div>\r\n                                </li>\r\n\r\n                            </ul>\r\n                            <div>\r\n\r\n                                <label>\r\n                                    <div id=\"patro\">Your sponsor is {sponsor}</div>\r\n                                </label>\r\n                                <br />\r\n                                <input type=\"number\" className=\"form-control\" id=\"amount\" placeholder={INVEST_MIN_AMOUNT_2} style={{'textAlign':'center', 'background': 'transparent', 'color':'white'}} />\r\n                                <br />\r\n                                <label>\r\n                                    Deposit fee 20-50 TRX.\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"button-wrapper\" onClick={() => this.deposit()} style={{'cursor': 'pointer'}}>\r\n                                <a href=\"#pricing\" className=\"btn-solid-reg page-scroll\" style={{'color':'#f7f4f4'}}>INVESTIMENT</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n\r\n    var mydireccion = await window.tronWeb.trx.getAccount();\r\n    mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n\r\n    var registered = await Utils.contract.isActive(mydireccion).call();\r\n    //console.log(registered);\r\n\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n\r\n    var getUserTotalWithdrawn = await Utils.contract.getUserTotalWithdrawn(direccion.address).call();\r\n\r\n    var getUserDividends = await Utils.contract.getUserDividends(direccion.address).call();\r\n\r\n    var getUserAvailable = await Utils.contract.getUserAvailable(direccion.address).call();\r\n\r\n    var getUserTotalDeposits = await Utils.contract.getUserTotalDeposits(direccion.address).call();\r\n\r\n    var getUserReferralBonus = await Utils.contract.getUserReferralBonus(direccion.address).call();\r\n\r\n    //console.log();\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      balanceRef: parseInt(getUserReferralBonus._hex)/1000000,\r\n      totalRef: parseInt(getUserDividends._hex)/1000000,\r\n      invested: parseInt(getUserTotalDeposits._hex)/1000000,\r\n      my: parseInt(getUserAvailable._hex)/1000000,\r\n      withdrawn: parseInt(getUserTotalWithdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    const { my } = this.state;\r\n\r\n    var RETI_MIN = await Utils.contract.RETI_MIN().call();\r\n\r\n    RETI_MIN = parseInt(RETI_MIN._hex)/1000000;\r\n\r\n    if ( my >= RETI_MIN ) {\r\n      await Utils.contract.withdrawl().send();\r\n    }else{\r\n      window.alert(\"El minimo de retiro es \"+RETI_MIN+\" TRX\");\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, link } = this.state;\r\n\r\n    return (\r\n    <div id=\"request\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"text-container\" style={{'color': '#39ef09','textAlign': 'center'}}>\r\n\r\n                        <h1 style={{'color': '#edf2eb#'}}>{invested} TRX IN MY INVESTMENTS</h1>\r\n                       <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6\" style={{'border': 'dashed','borderRight': 'none','paddingTop': '30px','paddingBottom': '30px','fontSize': '1.2rem'}}>\r\n                                    <h3><i className=\"fas fa-coins\"></i>Dividends <br />{totalRef} TRX</h3>\r\n                                <p id=\"wal\"></p>\r\n                                    <br />Earning of referrals\r\n                                    <br /><b id=\"availableReferrerEarnings\">{balanceRef}</b> TRX\r\n                                    <br /><br />withdrawable <br />(earning of referrals included).\r\n                                    <br /><b id=\"withdrawable\">{my}</b> TRX\r\n                                    <br />\r\n                                    <br /><a href=\"#request\" className=\"button-link-1 pushtop-30\" onClick={( ) => this.withdraw()}>WITHDRAWAL</a>\r\n                                    <br />\r\n                                    <br />\r\n                                    <div>\r\n                                      You must have at least 20-40 TRX for the transaction fee.\r\n                                    </div>\r\n                                    <br />\r\n                                    Total invested <b className=\"totalInvestment\" >{invested}</b> TRX\r\n                                    <br />\r\n                                    Dividends withdrawn <b className=\"totalDivs\" >{withdrawn}</b> TRX\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\" style={{'border': 'dashed','paddingTop': '30px','paddingBottom': '30px', 'fontSize': '1.2rem'}}>\r\n                                    <h3><i className=\"fas fa-user-friends\"></i>Referral program <br />{balanceRef} TRX</h3>\r\n\r\n                                    <br />Your referral link [\r\n                                    <CopyToClipboard text={link}>\r\n                                      <a href=\"#request\" style={{'cursor': 'pointer', 'color': 'orange'}}>Copy link</a>\r\n                                    </CopyToClipboard>]\r\n                                    <br /> \r\n                                    <br /> {link}\r\n                                    <div id=\"reflink\" style={{'fontWeight':'bold'}}></div>\r\n                                    <br />1  Referral （5% de gain） - <b >{parseFloat((balanceRef*0.5).toFixed(6))}</b>\r\n                                    <br />2  Referral （3% de gain） - <b >{parseFloat((balanceRef*0.3).toFixed(6))}</b>\r\n                                    <br />3 Referral （1% de gain） - <b >{parseFloat((balanceRef*0.1).toFixed(6))}</b>\r\n\r\n                                    <br />\r\n                                    <br />Total earnings of paid referrals - <b id=\"referrerEarnings\">{balanceRef}</b> TRX\r\n\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink row' onClick={ openTronLink }>\r\n            <div className='info col-xs-12 col-md-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n              \r\n        <CrowdFunding />\r\n        <Oficina /> \r\n\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}