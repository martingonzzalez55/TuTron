{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Oficina/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","wallet","EarnTron","Component","constructor","props","super","state","totalInvestors","totalInvested","sponsor","deposit","bind","refer","componentDidMount","Utils","window","setInterval","loc","document","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","setState","getElementById","value","amount","invest","send","shouldPollResponse","callValue","totalUsers","call","parseInt","_hex","render","id","className","style","type","placeholder","onClick","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Investors","Link","withdraw","trx","getAccount","mydireccion","address","fromHex","isActive","getUserTotalWithdrawn","getUserDividends","getUserAvailable","getUserTotalDeposits","getUserReferralBonus","text","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.a131bd17.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acÃ¡ ///////////////////////////////////\r\nconst contractAddress = \"TYUXevv7JkGanzHh3eTt3VSG5A72L6y47U\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nconst wallet = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      sponsor: \"Loading...\"\r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n    this.refer = this.refer.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1*1000);\r\n    setInterval(() => this.refer(),1*1000);\r\n  };\r\n\r\n  async refer() {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref'].length === 34) {\r\n\r\n          this.setState({\r\n            sponsor: get['ref']\r\n          });\r\n\r\n        \r\n        }else{\r\n\r\n           this.setState({\r\n            sponsor: wallet\r\n          });\r\n\r\n        }\r\n        \r\n        \r\n    }else{\r\n\r\n       this.setState({\r\n          sponsor: wallet\r\n        });\r\n\r\n    }\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref'].length === 34) {\r\n\r\n          document.getElementById('sponsor').value = get['ref'];            \r\n        }else{\r\n\r\n           document.getElementById('sponsor').value = wallet;\r\n        }\r\n        \r\n        \r\n    }else{\r\n\r\n        document.getElementById('sponsor').value = wallet; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n  \r\n    return Utils.contract.invest(sponsor).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n    \r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    var totalUsers = await Utils.contract.totalUsers().call();\r\n    //console.log(totalUsers);\r\n\r\n    var totalInvested = await Utils.contract.totalInvested().call();\r\n    //console.log(totalInvested);\r\n\r\n\r\n    this.setState({\r\n      totalInvestors: parseInt(totalUsers._hex),\r\n      totalInvested: parseInt(totalInvested._hex)/1000000,\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { totalInvestors, totalInvested, sponsor } = this.state;\r\n    \r\n    return (\r\n\r\n    <div id=\"pricing\" className=\"cards-2\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <h2>Multiple ways to Capitalize</h2>\r\n                    <p className=\"p-heading p-large\">We develop different capitalization rates, you can decide and choose according to the capital and interest you want.</p>\r\n                </div> \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h1>Return investiment of 1% everiday (+0.0416% for hourly)</h1>\r\n                    <div className=\"according\" style={{'textAlign': 'left','fontSize': '1.1rem','listStyle': 'disclosure-closed'}}>\r\n                        <li>YOUTRON7 smart-contract calculate profit up to every deposit since the date it was made. Every hour you will get +0.0416%, every day +1%.</li><br />\r\n                        <li>Smart-contract calculates hold-bonus from your deposit, or last withdraw date. If you did not request payment, it will charge you an additional bonus. After 24 hours +0.05% and so on.</li><br />\r\n\r\n                        <li>+0.07% for every 700,000 TRX on platform balance</li> <br />\r\n                    </div>\r\n                        Total invested amount (TRX):<br />\r\n                        <button  className=\"btn  btn-success\"  style={{'width': '100%'}}>{totalInvested} TRX</button><br /><br />\r\n                        Total active participants:<br />\r\n                        <button  className=\"btn  btn-success\"  style={{'width': '100%'}}>{totalInvestors}</button>\r\n\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"label\">\r\n\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">INVESTIMENT</div>\r\n                            <div className=\"card-subtitle\">earn everisdays</div>\r\n                            <hr className=\"cell-divide-hr\" />\r\n                            <div className=\"price\">\r\n                                <span className=\"value\">+1%</span>\r\n                                <div className=\"frequency\">Daily earning</div>\r\n                            </div>\r\n                            <hr className=\"cell-divide-hr\" />\r\n                            <ul className=\"list-unstyled li-space-lg\">\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">Dividends every day</div>\r\n                                </li>\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">Total return +1% * days </div>\r\n                                </li>\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">0.07% bonus 700,000  trx</div>\r\n                                </li>\r\n                                <li className=\"media\">\r\n                                    <i className=\"fas fa-check\"></i><div className=\"media-body\">TRX minimum investment amount 200 trx</div>\r\n                                </li>\r\n\r\n                            </ul>\r\n                            <div>\r\n\r\n                                <label>\r\n                                    <div id=\"patro\">Your sponsor is {sponsor}</div>\r\n                                </label>\r\n                                <input type=\"number\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 200 TRX\" style={{'textAlign':'center', 'background': 'transparent', 'color':'white'}} />\r\n\r\n                                <label>\r\n                                    Deposit fee 20-50 TRX.\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"button-wrapper\" onClick={() => this.deposit()} style={{'cursor': 'pointer'}}>\r\n                                <a href=\"#pricing\" className=\"btn-solid-reg page-scroll\" style={{'color':'#f7f4f4'}}>INVESTIMENT</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class EarnTron extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccion: \"\",\r\n      link: \"Haz una inversiÃ³n para obtener el LINK de referido\",\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),1000);\r\n    setInterval(() => this.Link(),1000);\r\n  };\r\n\r\n  async Link() {\r\n\r\n    var mydireccion = await window.tronWeb.trx.getAccount();\r\n    mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n\r\n    var registered = await Utils.contract.isActive(mydireccion).call();\r\n    //console.log(registered);\r\n\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      \r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversiÃ³n para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n    \r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n\r\n    var getUserTotalWithdrawn = await Utils.contract.getUserTotalWithdrawn(direccion.address).call();\r\n\r\n    var getUserDividends = await Utils.contract.getUserDividends(direccion.address).call();\r\n\r\n    var getUserAvailable = await Utils.contract.getUserAvailable(direccion.address).call();\r\n\r\n    var getUserTotalDeposits = await Utils.contract.getUserTotalDeposits(direccion.address).call();\r\n\r\n    var getUserReferralBonus = await Utils.contract.getUserReferralBonus(direccion.address).call();\r\n\r\n    //console.log();\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      balanceRef: parseInt(getUserReferralBonus._hex)/1000000,\r\n      totalRef: parseInt(getUserDividends._hex)/1000000,\r\n      invested: parseInt(getUserTotalDeposits._hex)/1000000,\r\n      my: parseInt(getUserAvailable._hex)/1000000,\r\n      withdrawn: parseInt(getUserTotalWithdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link, sponsor } = this.state;\r\n\r\n    return (\r\n    <div id=\"request\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"text-container\" style={{'color': '#39ef09','textAlign': 'center'}}>\r\n\r\n                        <h1 style={{'color': '#edf2eb#'}}>{invested} TRX IN MY INVESTMENTS</h1>\r\n                       <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6\" style={{'border': 'dashed','borderRight': 'none','paddingTop': '30px','paddingBottom': '30px','fontSize': '1.2rem'}}>\r\n                                    <h3><i className=\"fas fa-coins\"></i>Dividends</h3>\r\n                                <p id=\"wal\"></p>\r\n                                    <br />Earning of referrals\r\n                                    <br /><b id=\"availableReferrerEarnings\">{balanceRef}</b> TRX\r\n                                    <br /><br />With (earning of referrals included).\r\n                                    <br /><b id=\"withdrawable\">{my}</b> TRX\r\n                                    <br />\r\n                                    <br /><a href=\"#request\" className=\"button-link-1 pushtop-30\" onClick={( ) => this.withdraw()}>WITHDRAWAL</a>\r\n                                    <br />\r\n                                    <br />\r\n                                    <div>\r\n                                      You must have at least 20-40 TRX for the transaction fee.\r\n                                    </div>\r\n                                    <br />\r\n                                    Total invested <b className=\"totalInvestment\" >{invested}</b> TRX\r\n                                    <br />\r\n                                    Dividends withdrawn <b className=\"totalDivs\" >{withdrawn}</b> TRX\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6\" style={{'border': 'dashed','paddingTop': '30px','paddingBottom': '30px', 'fontSize': '1.2rem'}}>\r\n                                    <h3><i className=\"fas fa-user-friends\"></i>Referral program</h3>\r\n                                    \r\n                                    <br />Your referral link [\r\n                                    <CopyToClipboard text={link}>\r\n                                      <a style={{'cursor': 'pointer', 'color': 'orange'}}>Copy link</a>\r\n                                    </CopyToClipboard>]\r\n                                    <div id=\"reflink\" style={{'fontWeight':'bold'}}></div>\r\n                                    <br />1  Referral ï¼5% de gainï¼ - <b >{balanceRef*0.5}</b>\r\n                                    <br />2  Referral ï¼3% de gainï¼ - <b >{balanceRef*0.3}</b>\r\n                                    <br />3 Referral ï¼1% de gainï¼ - <b >{balanceRef*0.1}</b>\r\n                                    <br />4 Referral ï¼1% de gainï¼ - <b >{balanceRef*0.1}</b>\r\n                                    <br />\r\n                                    <br />Total earnings of paid referrals - <b id=\"referrerEarnings\">{balanceRef}</b> TRX\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div> \r\n            </div> \r\n        </div> \r\n    </div>\r\n\r\n      \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink row' onClick={ openTronLink }>\r\n            <div className='info col-xs-12 col-md-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n              \r\n        <CrowdFunding />\r\n        <Oficina /> \r\n\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}